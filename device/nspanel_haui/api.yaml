---
# API Configuration
api:

  # API Password for HA
  encryption:
    key: $api_encryption_key

  # Available actions
  actions:

    # Action to update a TFT file
    # This will update the nextion display with the tft file
    # from tft_url
    - action: upload_tft
      then:
        - lambda: id(haui_disp).upload_tft();

    # Action to update a TFT file from URL
    - action: upload_tft_url
      variables:
        url: string
      then:
        - lambda: id(haui_disp).set_tft_url(url.c_str());
        - lambda: id(haui_disp).upload_tft();

    # Action to send a command
    # This will send a command to the nextion display
    - action: send_command
      variables:
        cmd: string
      then:
        - lambda: id(send_command).execute(cmd);

    # Action to change the brightness of the display
    - action: set_brightness
      variables:
        intensity: int
      then:
        - lambda: id(set_brightness).execute(intensity);

    # Action to change the page of the display
    - action: goto_page
      variables:
        page: string
      then:
        - lambda: id(goto_page).execute(page);

    # Action to play a song for RTTTL strings
    - action: play_rtttl
      variables:
        # see https://picaxe.com/rtttl-ringtones-for-tune-command/
        song_str: string
      then:
        - lambda: id(play_rtttl).execute(song_str);

    # Action to play a named sound
    - action: play_sound
      variables:
        name: string
      then:
        - lambda: id(play_sound).execute(name);

    # Action to reset the last interaction value
    - action: reset_last_interaction
      variables:
        offset: int
      then:
        - lambda: id(update_last_interaction).execute(-1, offset);

    # Action to send a notification
    - action: send_notification
      variables:
        title: string
        message: string
        icon: string
      then:
        - lambda: |-
            id(send_notification).execute(
              title, message, icon, 0
            );
    - action: send_notification_with_timeout
      variables:
        title: string
        message: string
        icon: string
        timeout: int
      then:
        - lambda: |-
            id(send_notification).execute(
              title, message, icon, timeout
            );
